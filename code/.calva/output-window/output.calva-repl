; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.8.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.25.11"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +provided,+test,+dev repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: group_lifecycle_test.clj
#'sixsq.nuvla.server.resources.group-lifecycle-test/bad-methods
; Running tests for sixsq.nuvla.server.resources.group-lifecycle-test...
{:response
 {:status 404,
  :headers {"Content-Type" "application/json"},
  :body
  {:status 404, :message "unknown resource", :resource-id "/api/"}},
 :request
 {:protocol "HTTP/1.1",
  :remote-addr "127.0.0.1",
  :headers
  {"host" "localhost",
   "nuvla-authn-info"
   "group/nuvla-admin group/nuvla-admin group/nuvla-user group/nuvla-anon",
   "content-type" "application/json"},
  :server-port 80,
  :content-type "application/json",
  :uri "/api/",
  :server-name "localhost",
  :body nil,
  :scheme :http,
  :request-method :get},
 :headers
 {"nuvla-authn-info"
  "group/nuvla-admin group/nuvla-admin group/nuvla-user group/nuvla-anon"},
 :app
 #function[sixsq.nuvla.server.middleware.logger/wrap-logger/fn--29525],
 :content-type "application/json",
 :cookie-jar nil}
{:response
 {:status 200,
  :headers {"Content-Type" "application/json"},
  :body
  {:description "description",
   :tags ["one" "two"],
   :updated "2021-04-29T13:52:33.446Z",
   :name "name",
   :created "2021-04-29T13:52:33.446Z",
   :created-by "group/nuvla-admin",
   :id "group/beta-two",
   :resource-type "group",
   :acl {:owners ["group/nuvla-admin"]},
   :operations
   [{:rel "edit", :href "group/beta-two"}
    {:rel "delete", :href "group/beta-two"}],
   :users []}},
 :request
 {:protocol "HTTP/1.1",
  :remote-addr "127.0.0.1",
  :headers
  {"host" "localhost",
   "nuvla-authn-info"
   "group/nuvla-admin group/nuvla-admin group/nuvla-user group/nuvla-anon",
   "content-type" "application/json"},
  :server-port 80,
  :content-type "application/json",
  :uri "/api/group/beta-two",
  :server-name "localhost",
  :body nil,
  :scheme :http,
  :request-method :get},
 :headers
 {"nuvla-authn-info"
  "group/nuvla-admin group/nuvla-admin group/nuvla-user group/nuvla-anon"},
 :app
 #function[sixsq.nuvla.serve
r.middleware.logger/wrap-logger/fn--29525],
 :content-type "application/json",
 :cookie-jar nil}
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/check-metadata (metadata_test_utils.clj:47):
; Function of count did not return truthy value
; expected:
(f__6030__auto__ count__6031__auto__)
; actual:
false
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/check-metadata (metadata_test_utils.clj:58):
; group not found in type-uris
; expected:
(type-uris type-uri)
; actual:
nil
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/check-metadata (metadata_test_utils.clj:59):
; group not found in ids
; expected:
(ids type-uri)
; actual:
nil
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:56):
; Expecting status 200 got 500. Message: unexpected exception querying: {:root_cause [{:type "index_not_found_exception", :reason "no such index [nuvla-group]", :resource.type "index_or_alias", :resource.id "nuvla-group", :index_uuid "_na_", :index "nuvla-group"}], :type "index_not_found_exception", :reason "no such index [nuvla-group]", :resource.type "index_or_alias", :resource.id "nuvla-group", :index_uuid "_na_", :index "nuvla-group"}
; expected:
(clojure.core/= status__5964__auto__ actual__5965__auto__)
; actual:
(not (clojure.core/= 200 500))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:57):
; Count is not a number: 
; expected:
(clojure.core/number? count__6031__auto__)
; actual:
(not (clojure.core/number? nil))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:59):
; expected:
(= #{group/nuvla-nuvlabox group/nuvla-admin group/nuvla-anon group/nuvla-user} (set (map :id entries)))
; actual:
(not (= #{group/nuvla-nuvlabox group/nuvla-admin group/nuvla-anon group/nuvla-user} #{}))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:69):
; Expecting status 200 got 500. Message: unexpected exception querying: {:root_cause [{:type "index_not_found_exception", :reason "no such index [nuvla-group]", :resource.type "index_or_alias", :resource.id "nuvla-group", :index_uuid "_na_", :index "nuvla-group"}], :type "index_not_found_exception", :reason "no such index [nuvla-group]", :resource.type "index_or_alias", :resource.id "nuvla-group", :index_uuid "_na_", :index "nuvla-group"}
; expected:
(clojure.core/= status__5964__auto__ actual__5965__auto__)
; actual:
(not (clojure.core/= 200 500))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:70):
; Count is not a number: 
; expected:
(clojure.core/number? count__6031__auto__)
; actual:
(not (clojure.core/number? nil))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:72):
; expected:
(= #{group/nuvla-nuvlabox group/nuvla-admin group/nuvla-anon group/nuvla-user} (set (map :id entries)))
; actual:
(not (= #{group/nuvla-nuvlabox group/nuvla-admin group/nuvla-anon group/nuvla-user} #{}))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:74):
; expected:
(= [nil nil nil nil] (map :users entries))
; actual:
(not (= [nil nil nil nil] ()))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:89):
; Expecting status 201 got 400. Message: requested href not found: group-template/generic
; expected:
(clojure.core/= status__5964__auto__ actual__5965__auto__)
; actual:
(not (clojure.core/= 201 400))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (lifecycle_test_utils.clj:215):
; Location header missing from response
; expected:
uri
; actual:
nil
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:103):
; expected:
(= id expected-id)
; actual:
(not (= nil group/alpha-one))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:104):
; expected:
(= name name-attr)
; actual:
(not (= nil name))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:105):
; expected:
(= description description-attr)
; actual:
(not (= nil description))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:106):
; expected:
(= tags tags-attr)
; actual:
(not (= nil [one two]))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:107):
; expected:
(= [] users)
; actual:
(not (= [] nil))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:121):
; Expecting status 200 got 404. Message: unknown resource
; expected:
(clojure.core/= status__5964__auto__ actual__5965__auto__)
; actual:
(not (clojure.core/= 200 404))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:128):
; expected:
(= users updated-users)
; actual:
(not (= [user/aa2f41a3-c54c-fce8-32d2-0324e1c32e22 user/bb2f41a3-c54c-fce8-32d2-0324e1c32e22 user/cc2f41a3-c54c-fce8-32d2-0324e1c32e22] nil))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:135):
; Expecting status 200 got 404. Message: unknown resource
; expected:
(clojure.core/= status__5964__auto__ actual__5965__auto__)
; actual:
(not (clojure.core/= 200 404))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:121):
; Expecting status 200 got 400. Message: resource does not satisfy defined schema:
-- Spec failed --------------------

  {:description ...,
   :tags ...,
   :updated ...,
   :name ...,
   :created ...,
   :updated-by ...,
   :created-by ...,
   :id ...,
   :resource-type ...,
   :acl
   {:owners "group/nuvla-admin", :edit-acl ..., :view-meta ...},
            ^^^^^^^^^^^^^^^^^^^
   :operations ...,
   :users ...}

should satisfy

  vector?

-- Relevant specs -------

:sixsq.nuvla.server.resources.spec.acl-resource/edit-acl:
  (spec-tools.core/spec
   {:spec
    (spec-tools.core/spec
     {:spec
      (clojure.spec.alpha/coll-of
       :sixsq.nuvla.server.resources.spec.acl-common/principal
       :kind
       clojure.core/vector?
       :distinct
       true),
      :type :vector,
      :leaf? false,
      :name "principals",
      :json-schema/type "array",
      :json-schema/description "list of principals"}),
    :type :vector,
    :leaf? false,
    :name "edit-acl",
    :json-schema/display-name "edit ACL",
    :json-schema/description
    "list of principals that can edit resource ACL"})
:sixsq.nuvla.server.resources.spec.acl-resource/owners:
  (spec-tools.core/spec
   {:spec
    (clojure.spec.alpha/coll-of
     :sixsq.nuvla.server.resources.spec.acl-common/principal
     :kind
     clojure.core/vector?
     :distinct
     true
     :min-count
     1),
    :type :vector,
    :leaf? false,
    :name "owners",
    :json-schema/description "list of owners of a resource"})
:sixsq.nuvla.server.resources.spec.common/acl:
  (spec-tools.core/spec
   {:spec
    (spec-tools.core/spec
     {:json-schema/type "map",
      :json-schema/section "acl",
      :name "acl",
      :type :map,
      :json-schema/display-name "ACL",
      :spec
      (sixsq.nuvla.server.util.spec/only-keys
       :req-un
       [:sixsq.nuvla.server.resources.spec.acl-resource/owners]
       :opt-un
       [:sixsq.nuvla.server.resources.spec.acl-resource/view-meta
        :sixsq.nuvla.server.resources.spec.acl-resource/view-data
        :sixsq.nuvla.server.resources.spec.acl-resource/view-acl
        :sixsq.nuvla.server.resources.spec.acl-resource/edit-meta
        :sixsq.nuvla.server.resources.spec.acl-resource/edit-data
        :sixsq.nuvla.server.resources.spec.acl-resource/edit-acl
        :sixsq.nuvla.server.resources.spec.acl-resource/manage
        :sixsq.nuvla.server.resources.spec.acl-resource/delete]),
      :leaf? false,
      :json-schema/description "resource ACL",
      :json-schema/order 0}),
    :type :map,
    :leaf? false,
    :json-schema/order 0})
:sixsq.nuvla.server.resources.spec.group/schema:
  (clojure.spec.alpha/merge
   (clojure.spec.alpha/keys
    :req-un
    [:sixsq.nuvla.server.resources.spec.common/acl
     :sixsq.nuvla.server.resources.spec.common/created
     :sixsq.nuvla.server.resources.spec.common/id
     :sixsq.nuvla.server.resources.spec.common/resource-type
     :sixsq.nuvla.server.resources.spec.common/updated
     :sixsq.nuvla.server.resources.spec.group/users]
    :opt-un
    [:sixsq.nuvla.server.resources.spec.common/name
     :sixsq.nuvla.server.resources.spec.common/description
     :sixsq.nuvla.server.resources.spec.common/tags
     :sixsq.nuvla.server.resources.spec.common/parent
     :sixsq.nuvla.server.resources.spec.common/resource-metadata
     :sixsq.nuvla.server.resources.spec.common/operations
     :sixsq.nuvla.server.resources.spec.common/created-by
     :sixsq.nuvla.server.resources.spec.common/updated-by])
   (clojure.spec.alpha/map-of
    #{:description :tags :resource-metadata :parent :updated :name
      :created :updated-by :created-by :id :resource-type :acl
      :operations :users}
    clojure.core/any?))

-- Spec failed --------------------

  {:description ...,
   :tags ...,
   :updated ...,
   :name ...,
   :created ...,
   :updated-by ...,
   :created-by ...,
   :id ...,
   :resource-type ...,
   :acl
   {:owners ..., :edit-acl "user/cc2f41a3-c54c-fce8-32d2-0324e1c32e22", :view-meta ...},
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   :operations ...,
   :users ...}

should satisfy

  vector?

-- Relevant specs -------

:sixsq.nuvla.server.resources.spec.acl-resource/edit-acl:
  (spec-tools.core/spec
   {:spec
    (spec-tools.core/spec
     {:spec
      (clojure.spec.alpha/coll-of
       :sixsq.nuvla.server.resources.spec.acl-common/principal
       :kind
       clojure.core/vector?
       :distinct
       true),
      :type :vector,
      :leaf? false,
      :name "principals",
      :json-schema/type "array",
      :json-schema/description "list of principals"}),
    :type :vector,
    :leaf? false,
    :name "edit-acl",
    :json-schema/display-name "edit ACL",
    :json-schema/description
    "list of principals that can edit resource ACL"})
:sixsq.nuvla.server.resources.spec.acl-resource/owners:
  (spec-tools.core/spec
   {:spec
    (clojure.spec.alpha/coll-of
     :sixsq.nuvla.server.resources.spec.acl-common/principal
     :kind
     clojure.core/vector?
     :distinct
     true
     :min-count
     1),
    :type :vector,
    :leaf? false,
    :name "owners",
    :json-schema/description "list of owners of a resource"})
:sixsq.nuvla.server.resources.spec.common/acl:
  (spec-tools.core/spec
   {:spec
    (spec-tools.core/spec
     {:json-schema/type "map",
      :json-schema/section "acl",
      :name "acl",
      :type :map,
      :json-schema/display-name "ACL",
      :spec
      (sixsq.nuvla.server.util.spec/only-keys
       :req-un
       [:sixsq.nuvla.server.resources.spec.acl-resource/owners]
       :opt-un
       [:sixsq.nuvla.server.resources.spec.acl-resource/view-meta
        :sixsq.nuvla.server.resources.spec.acl-resource/view-data
        :sixsq.nuvla.server.resources.spec.acl-resource/view-acl
        :sixsq.nuvla.server.resources.spec.acl-resource/edit-meta
        :sixsq.nuvla.server.resources.spec.acl-resource/edit-data
        :sixsq.nuvla.server.resources.spec.acl-resource/edit-acl
        :sixsq.nuvla.server.resources.spec.acl-resource/manage
        :sixsq.nuvla.server.resources.spec.acl-resource/delete]),
      :leaf? false,
      :json-schema/description "resource ACL",
      :json-schema/order 0}),
    :type :map,
    :leaf? false,
    :json-schema/order 0})
:sixsq.nuvla.server.resources.spec.group/schema:
  (clojure.spec.alpha/merge
   (clojure.spec.alpha/keys
    :req-un
    [:sixsq.nuvla.server.resources.spec.common/acl
     :sixsq.nuvla.server.resources.spec.common/created
     :sixsq.nuvla.server.resources.spec.common/id
     :sixsq.nuvla.server.resources.spec.common/resource-type
     :sixsq.nuvla.server.resources.spec.common/updated
     :sixsq.nuvla.server.resources.spec.group/users]
    :opt-un
    [:sixsq.nuvla.server.resources.spec.common/name
     :sixsq.nuvla.server.resources.spec.common/description
     :sixsq.nuvla.server.resources.spec.common/tags
     :sixsq.nuvla.server.resources.spec.common/parent
     :sixsq.nuvla.server.resources.spec.common/resource-metadata
     :sixsq.nuvla.server.resources.spec.common/operations
     :sixsq.nuvla.server.resources.spec.common/created-by
     :sixsq.nuvla.server.resources.spec.common/updated-by])
   (clojure.spec.alpha/map-of
    #{:description :tags :resource-metadata :parent :updated :name
      :created :updated-by :created-by :id :resource-type :acl
      :operations :users}
    clojure.core/any?))

-------------------------
Detected 2 errors
; expected:
(clojure.core/= status__5964__auto__ actual__5965__auto__)
; actual:
(not (clojure.core/= 200 400))
; FAIL in sixsq.nuvla.server.resources.group-lifecycle-test/lifecycle (group_lifecycle_test.clj:128):
; expected:
(= users updated-users)
; actual:
(not (= [user/aa2f41a3-c54c-fce8-32d2-0324e1c32e22 user/bb2f41a3-c54c-fce8-32d2-0324e1c32e22 user/cc2f41a3-c54c-fce8-32d2-0324e1c32e22] []))
; 40 tests finished, problems found. 😭 errors: 0, failures: 22, ns: 1, vars: 3
clj꞉sixsq.nuvla.server.resources.group-lifecycle-test꞉> 
; nREPL Connection was closed
