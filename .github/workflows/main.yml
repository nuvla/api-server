name: BUILD

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:

  job-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting for sonar
          fetch-depth: 0

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            - name: Cache local Maven repository

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      # Ubuntu Repos on Azure fail often. Attempt to install before other
      # long-running operations.
      - name: Install xmllinter (for "Fail on failed tests")
        run: sudo apt-get install -y libxml2-utils

      - name: Setup Sonar Scanner
        uses: warchant/setup-sonar-scanner@v3
        with:
          version: 4.6.2.2472

      - name: Run Sonar Scanner
        env:
          # provide GITHUB_TOKEN to get access to secrets.SONAR_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: code
        run: |
          export JAVA_OPTS="-Xms6g -Xmx6g"
          export ES_JAVA_OPTS="-Xms6g -Xmx6g"
          sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -X

      - name: Get list of tests
        if: always()
        id: tests
        uses: Rishabh510/Path-lister-action@master
        with:
          path: "code/test-reports"
          type: ".xml"

      - name: Fail on failed tests
        if: always()
        run: |
          echo "Found ${{ steps.tests.outputs.path_count }} test report(s)"
          if [[ ${{ steps.tests.outputs.path_count }} < 1 ]]; then
             echo "ERROR: No unit test reports collected."
             exit 1
          fi
          for f in ${{ steps.tests.outputs.paths }}; do
            echo "=== $f ==="
            if [[ $(xmllint --xpath "string(//testsuite/@failures)" $f) > 1 ]]; then
               echo TEST FAILED: $f
               exit 1
            fi
            if [[ $(xmllint --xpath "string(//testsuite/@errors)" $f) > 1 ]]; then
               echo TEST ERRORED: $f
               exit 1
            fi
          done

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@v1.0.0
        # Force to fail step after specific time
        timeout-minutes: 5
        with:
          scanMetadataReportFile: code/.scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - uses: s4u/maven-settings-action@v2.2.0
        with:
          githubServer: false
          override: true
          servers: |
            [{
                "id": "docker.io",
                "username": "${{ secrets.SIXSQ_DOCKER_USERNAME }}",
                "password": "${{ secrets.SIXSQ_DOCKER_PASSWORD }}"
            }]

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
        id: extract_branch

      - name: Build with Maven
        env:
          TRAVIS_BRANCH: ${{ steps.extract_branch.outputs.branch }}
          TRAVIS_PULL_REQUEST_BRANCH: ${{ github.head_ref }}
          TRAVIS_BUILD_NUMBER: ${{ github.run_id }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SIXSQ_DOCKER_USERNAME: ${{ secrets.SIXSQ_DOCKER_USERNAME }}
          SIXSQ_DOCKER_PASSWORD: ${{ secrets.SIXSQ_DOCKER_PASSWORD }}
        run: mvn deploy -DskipTests=true

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: code/test-reports/TEST-*.xml

  job-notify:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - job-build
    runs-on: ubuntu-latest
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
